package com.frame.controller.mng;

import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.frame.base.entity.FrontMessage;
import com.frame.base.entity.OrderInfo;
import com.frame.base.entity.UserInfo;
import com.frame.controller.front.OrderController;
import com.frame.javabean.PageBean;
import com.frame.pojo.OrderInfoQO;
import com.frame.service.OrderService;
import com.frame.util.JsonUtil;
import com.function.message.mq.MQCacheQueue;
import com.function.message.mq.MQConsumer;
import com.function.message.mq.MQProducer;

/**
 * 后台管理操作
 * 
 * @author Norman
 *
 */
@Controller("orderMngController")
@RequestMapping("/mng/order/")
public class OrderMngController {
	
	    //订单处理操作
		@Autowired
		private OrderService orderService;
		
		//消息生产者
		@Autowired
		private MQProducer mqProducer;
		
		@Autowired
		private MQConsumer mqConsumer;
		
		//@Autowired
		private MQCacheQueue mqCacheQueue;
		

		/**
		 * 编辑人：Norman
		 *
		 * 功能：后台管理主界面
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("index")
		public ModelAndView login() {

			String select = null;
			int start = 0;
			int page = 0;
			ModelAndView modelAndView=new ModelAndView("mngPage/ordermng/ordermng");
			PageBean pageBean=new PageBean();
			List<OrderInfoQO> orders=this.orderService.getOrders(pageBean);
			
			//接受消息
			//mqConsumer.receive(message);
			
			modelAndView.addObject("orders", orders);
			
			return  modelAndView;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：获取订单详情试方法
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("getOrder")
		public ModelAndView getOrder(String userName) {
			int orderId=0;
			OrderInfo order=this.orderService.getOrderById(orderId);
			ModelAndView modelAndView=new ModelAndView("mngPage/index/index");
			modelAndView.addObject("order", order);
			return  modelAndView;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：获取订单信息
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("selOrder")
		@ResponseBody
		public OrderInfo selOrder(int orderId) {
			
			//int orderId = 0;
			
			OrderInfo order=this.orderService.getOrderById(orderId);
		    
			return  order;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：获取订单信息
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("selOrderById")
		//@ResponseBody
		public ModelAndView selOrderById(int id) {
			ModelAndView modelAndView=new ModelAndView("mngPage/ordermng/ordermng");
			//int orderId = 0;
			
			List<OrderInfo> orders=this.orderService.getOrdersById(id,0,10);
			modelAndView.addObject("orders", orders);
			return  modelAndView;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：获取订单信息测试方法
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("selOrders")
		@ResponseBody
		public List<OrderInfoQO> selOrders(PageBean pageBean) {
			
			if(pageBean.getPageIndex()<1){
				pageBean.setPageIndex(1);
			}
			
			int count=0;
			
			pageBean.setStart((pageBean.getPageIndex()-1)*pageBean.getPageCount());
			
			List<OrderInfoQO> orders=this.orderService.getOrders(pageBean);
			
			return  orders;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：发送订单
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("sendOrder")
		@ResponseBody
		public FrontMessage sendOrder(OrderInfo order) {
			
			Logger log = Logger.getLogger(OrderController.class);  
			
			int result=this.orderService.sendOrder(order);
			
			FrontMessage message=new FrontMessage();
			
			// 订单发送成功,发送mq消息
			if(result>0){
				
				message.setCode("success");
				message.setMessage("发单成功。");
				// 生成mq消息
				String messages=JsonUtil.passToJson(order);
				
				mqProducer.sendMessage(messages);
				
			}else{
				
				message.setCode("error");
				message.setMessage("发单失败。");
			}
			
			log.info("OrderName"+order.getOrderName()+"order.getAddress()"+order.getAddress());
			
			return  message;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：获取所有用户 测试方法
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("reciveOrder")
		@ResponseBody
		public FrontMessage reciveOrder(HttpServletRequest request,OrderInfo order) {
			
			//if(order.getCourierId()<0 ){
				
			UserInfo userInfo=(UserInfo) request.getSession().getAttribute("userInfo");
			order.setCourierId(userInfo.getId());
				
			//}
			
			// 接单
			int result=this.orderService.reciveOrder(order);
			
			
			FrontMessage message=new FrontMessage();
			if(result>0){
				message.setCode("success");
				message.setMessage("接单成功。");
			}else{
				message.setCode("error");
				message.setMessage("接单失败。");
			}
			return  message;
		}
		
		/**
		 * 编辑人：Norman
		 *
		 * 功能：删除订单
		 * 
		 * 时间：2015年12月22日
		 * @return
		 */
		@RequestMapping("deleteOrder")
		@ResponseBody
		public FrontMessage deleteOrder(OrderInfo order) {
			
			// 删除
			int result=this.orderService.reciveOrder(order);
			
			
			/*if(result>0){
				
				modelAndView=login();
			}*/
			FrontMessage message=new FrontMessage();
			if(result>0){
				message.setCode("success");
				message.setMessage("删除成功。");
			}else{
				message.setCode("error");
				message.setMessage("删除失败。");
			}
			return  message;
		}
}
