$(function(){
	
	$.formValidator.initConfig({formID:"registerForm",theme:"ArrowSolidBox",submitOnce:true,
		onError:function(msg,obj,errorlist){
			$("#errorlist").empty();
			$.map(errorlist,function(msg){
				$("#errorlist").append("<li>" + msg + "</li>")
			});
		},
		ajaxPrompt : '有数据正在异步验证，请稍等...'
	});
	
	$("#userName").formValidator({
		onShow : "请输入你的账户名",
		onFocus : "请输入你的账户名",
		/*onfocus : "必须以13或14或15或17或18开头",*/
		/*onCorrect : "谢谢你的合作，你的手机号码正确"*/
	}).inputValidator({min:11,max:11,onError:"手机号码长度为11位，请确认"})
	
	.regexValidator({
		regExp : "mobile",
		dataType : "enum",
		onError : "手机号码格式不正确，请重新输入"
	}).ajaxValidator({
		
		dataType : "html",
		async : true,
		url : path+"/register/isOnlyUser.do",
		success : function(data){
			if( data.indexOf("success") >= 0 ) {
				$("#duanxintijiao").attr("disabled",false);
				return true;
			}
			$("#duanxintijiao").attr("disabled","disabled");
			return false;
		},
		buttons: $("#button"),
		error: function(jqXHR, textStatus, errorThrown){
			//alert("服务器没有返回数据，可能服务器忙，请重试"+errorThrown);
		},
		onError : "手机已被注册，请使用新的手机号",
		onWait : "正在对用户名进行唯一性校验，请稍候..."
		
	});
	
	$("#phone").formValidator({
		onShow : "请输入你的手机号码",
		onFocus : "请输入你的手机号码",
	}).inputValidator({min:11,max:11,onError:"手机号码长度为11位，请确认"})
	
	.regexValidator({
		regExp : "mobile",
		dataType : "enum",
		onError : "手机号码格式不正确，请重新输入"
	}).ajaxValidator({
		
		dataType : "html",
		async : true,
		url : path+"/register/isOnlyUser.do",
		success : function(data){
			if( data.indexOf("success") >= 0 ) {
				$("#duanxintijiao").attr("disabled",false);
				return true;
			}
			$("#duanxintijiao").attr("disabled","disabled");
			return false;
		},
		buttons: $("#button"),
		error: function(jqXHR, textStatus, errorThrown){
			//alert("服务器没有返回数据，可能服务器忙，请重试"+errorThrown);
		},
		onError : "手机已被注册，请使用新的手机号",
		onWait : "正在对用户名进行唯一性校验，请稍候..."
			
	});
	$("#password").formValidator({
		onShow : "请输入验证码",
		onFocus : "请输入6位数字验证码",
		/*onCorrect : "谢谢你的合作，你的正整数正确"*/
	}).inputValidator({min:1,onError:"验证码不能为空,请确认"}).regexValidator({
		regExp : "code",
		dataType : "enum",
		onError : "验证码输入错误"
	});/*.ajaxValidator({
		dataType : "html",
		data:{mobileCode:$("#zzs").val(),mobile:$("#tel").val()},
		async : true,
		url : "validateMobileCode.do",
		success : function(data){
			if( data.indexOf("success") > 0 ) {
				return true
			}
			return false;
		},
		buttons: $("#button"),
		error: function(jqXHR, textStatus, errorThrown){
			//alert("服务器没有返回数据，可能服务器忙，请重试"+errorThrown);
		},
		onError : "用户名已被注册，请使用新的用户名",
		onWait : "正在对用户名进行合法性校验，请稍候..."
	})*/
	
	
	$("#cardID") .formValidator({
		onShow : "请输入身份证",
		onFocus : "请输入身份证号码",
		defaultValue : ""
	}) .inputValidator({
		min : 15,
		max : 15,
		onError : "身份证号码长度不正确,请确认"
	}) .regexValidator({
		//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
		regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
		onError : "身份证格式不正确"
	});
	$("#password") .formValidator({
		onShow : "请输入密码",
		onFocus : "请输入密码",
		defaultValue : ""
	}) .inputValidator({
		min : 6,
		max : 15,
		onError : "密码长度不正确,请确认"
	}) .regexValidator({
		//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
		regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
		onError : "密码格式不正确"
	});
	
	
	$("#plateNumber")
	.formValidator({
		onShow : "请输验证码",
		onFocus : "验证码为6位数字",
		/*onCorrect : "恭喜你,你输对了",*/
		defaultValue : ""
	})
	.inputValidator({
		min : 6,
		max : 6,
		onError : "验证码长度不正确,请确认"
	})
	.regexValidator(
			{
				//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
				regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
				onError : "验证码格式不正确"
			});
	$("#drivingLicenceImage")
	.formValidator({
		onShow : "请输验证码",
		onFocus : "验证码为6位数字",
		/*onCorrect : "恭喜你,你输对了",*/
		defaultValue : ""
	})
	.inputValidator({
		min : 6,
		max : 6,
		onError : "验证码长度不正确,请确认"
	})
	.regexValidator(
			{
				//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
				regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
				onError : "验证码格式不正确"
			});
	$("#address")
	.formValidator({
		onShow : "请输入地址",
		onFocus : "请输入地址",
		defaultValue : ""
	})
	.inputValidator({
		min : 6,
		max : 6,
		onError : "验证码长度不正确,请确认"
	})
	.regexValidator(
			{
				//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
				regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
				onError : "验证码格式不正确"
			});
	$("#roleId")
	.formValidator({
		onShow : "请选择用户类型",
		onFocus : "请选择用户类型",
		defaultValue : ""
	})
	.inputValidator({
		min : 1,
		max : 6,
		onError : "验证码长度不正确,请确认"
	})
	.regexValidator(
			{
				//regExp : "^([\\w-.]+)@(([[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.)|(([\\w-]+.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(]?)$",
				regExp : "^(\\w)+(\\.\\w+)*@(\\w)+((\\.\\w+)+)$",
				onError : "验证码格式不正确"
			});
});

//注册
function register(){

	// 身份证ID
	var cardID=$("#cardID").val();
	var userName=$("#userName").val();
	var password=$("#password").val();
	var phone=$("#phone").val();
	var createTime=new Date();
	var updateTime=new Date();
	var plateNumber=$("#plateNumber").val();
	var age=$("#age").val();
	var drivingLicenceImage=$("#drivingLicenceImage").val();
	var address=$("#address").val();
	var userStatus=$("#userStatus").val();
	var roleId=$("#roleId option:selected").val();
	
	$.ajax({
		url:path+'/mng/user/addUser',
		data:{
			'userName':userName,
			'password':password,
			'cardID':cardID,
			'phone':phone,
			'plateNumber':plateNumber,
			'drivingLicenceImage':drivingLicenceImage,
			'address':address,
			//'createTime':createTime,
			//'updateTime':updateTime,
			'age':age,
			'roleId':roleId,
			'userStatus':userStatus
		},
		type:'post',
		success:function(data){
			//location.reload();
			window.location.href=path+"/mng/user/index";
			/*if(data>0){
				
				alert("添加成功");
				
			}*/
		},
		error: function(data){
			
			alert(data+"添加失败");
			
		}
	});
}