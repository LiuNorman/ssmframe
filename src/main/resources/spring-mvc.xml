<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven/>
    <context:component-scan base-package="com.frame.controller"/>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
    <!-- <bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
       <property name="basename">
           <value>spring-views</value>
       </property>
       <property name="order" value="0" />
   </bean> -->

    <!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
         <property name="messageConverters">
             <list>
                 <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                     <property name="supportedMediaTypes">
                         <list>
                             <value>text/html; charset=UTF-8</value>
                             <value>application/json;charset=UTF-8</value>
                         </list>
                     </property>
                 </bean>
                 <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                     <property name="supportedMediaTypes">
                         <list>
                             <value>text/html; charset=UTF-8</value>
                             <value>application/json;charset=UTF-8</value>
                         </list>
                     </property>
                 </bean>
             </list>
         </property>
     </bean> -->

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <!-- <bean id="MappingJackson2HttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
               <value>text/html;charset=UTF-8</value>  
               <value>text/json;charset=UTF-8</value>  
               <value>application/json;charset=UTF-8</value>  
                 
            </list>  
        </property>  
    </bean>   -->
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!--  <bean
         class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
         <property name="messageConverters">
             <list>   -->
    <!-- JSON转换器   -->
    <!--       <ref bean="mappingJacksonHttpMessageConverter" />
      </list>
  </property>
</bean>   -->

    <!-- <mvc:view-controller path="/" view-name="redirect:/showPage/index.jsp" /> -->

    <!-- 静态资源 -->
    <mvc:resources mapping="/images/**" location="/WEB-INF/shoPage/images/"/>
    <mvc:resources location="/*.html" mapping="/*.html"/>
    <mvc:resources location="/resources/**" mapping="/resources/modle/"/>
    <mvc:resources location="/model/**" mapping="/model/**"/>
    <mvc:resources location="/mobile/**" mapping="/mobile/**"/>

    <!-- 拦截器 -->
    <!-- <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/account/**" />
            <bean id="userInterceptor" class="com.iclnetwork.web.interceptor.MemberInterceptor" />
        </mvc:interceptor>


        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <property name="cacheSeconds" value="0" />
            </bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean id="openSessionInViewInterceptor" class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
                实体类
                <property name="entityManagerFactory" ref="entityManagerFactory" />
            </bean>
        </mvc:interceptor>
    </mvc:interceptors> -->

    <!-- 返回json -->
    <!-- <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
        <property name="jsonpParameterNames">
            <set>
                <value>jsonp</value>
               <value>callback</value>
            </set>
           </property>
    </bean>   -->


    <!-- html定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址   WEB-INF/showPage/frontPage/login/-->
        <property name="order" value="1"></property>
        <property name="prefix" value="/WEB-INF/showPage/"/>  <!-- frontPage/login/ -->
        <property name="suffix" value=".jsp"/>
        <!--  <property name="contentType" value="text/html"></property> -->
    </bean>

    <!-- jsp jstl -->
    <bean id="JSPViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="viewNames" value="*jsp"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="prefix" value="/WEB-INF/showPage/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="2"></property>
    </bean>
    <!-- ===================================================== -->
    <!-- ViewResolver For FreeMarker -->
    <!-- ===================================================== -->
    <bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="order" value="1"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=utf-8"/>
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.freemarker.FreeMarkerView</value>
        </property>
    </bean>


    <!-- ===================================================== -->
    <!-- ViewResolver For FreeMarkerConfigurer -->
    <!-- ===================================================== -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath">
            <value>/views/</value>
        </property>
        <!-- 设置FreeMarker环境属性 -->
        <property name="freemarkerSettings">
            <props>
                <!--刷新模板的周期，单位为秒 -->
                <prop key="template_update_delay">5</prop>
                <!--模板的编码格式 -->
                <prop key="default_encoding">UTF-8</prop>
                <!-- 本地化设置 -->
                <prop key="locale">UTF-8</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.####</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="tag_syntax">auto_detect</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>
    </bean>


    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

</beans>  